SUMUKHA.PK (16CO145)
PRAJVAL.M (16CO234)

Questions.
1.   Were there any difficulties you had with completing the optimization correctly.
Ans. Nope.

2.   Which optimizations gave the most benifit.
Ans. Creating a local histogram for each block of threads to reduce the global memory traffic gave the most optimisation.

3.   For the histogram kernel, how many global memory reads are being performed by your kernel? explain.
Ans. Number of global memory reads are equal to the number of elements in the input array.

4.   For the histogram kernel, how many global memory writes are being performed by your kernel? explain.
Ans. The number of global memory writes are equal to the number of elements in the input array.

5.   For the histogram kernel, how many atomic operations are being performed by your kernel? explain.
Ans. Every thread performs 2 atomicAdd, thus twice size of input array.

6.   Most text files will consist of only letters, numbers and whitespace characters. These 95 characters
     make up fall between ASCII numbers 32 - 126. What can we say about atomic access contention if more than
     95 threads are simultaneously trying to atomically increment a private histogram?
Ans. The memory contention gets distributed between the private histogram in the shared memory and the public histogram in the global memory.
     The number of threads contending to write over a private histogram will be limited to the number of threads per block.Thus, the data race
     is lower. The worst case scenario is when every thread has the same data (95 threads are in contention).
   
     However, for the global memory write, the degree of contention is at the most equal to the number of thread blocks. 
     This is because every thread from every block with the same thread index will acces only one element in the public histogram.
